{"ast":null,"code":"import React,{useState}from'react';export default function Todo(_ref){let{todo,toggleTodo,editTodo}=_ref;const[isEditing,setIsEditing]=useState(false);const[newName,setNewName]=useState(todo.name);function handleTodoClick(){toggleTodo(todo.id);}function handleEditClick(){setIsEditing(true);}function handleSaveClick(){editTodo(todo.id,newName);setIsEditing(false);}function handleCancelClick(){setIsEditing(false);setNewName(todo.name);}return/*#__PURE__*/React.createElement(\"div\",null,isEditing?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"input\",{type:\"text\",value:newName,onChange:e=>setNewName(e.target.value)}),/*#__PURE__*/React.createElement(\"button\",{onClick:handleSaveClick},\"Save\"),/*#__PURE__*/React.createElement(\"button\",{onClick:handleCancelClick},\"Cancel\")):/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"checkbox\",checked:todo.complete,onChange:handleTodoClick}),todo.name,/*#__PURE__*/React.createElement(\"button\",{onClick:handleEditClick},\"Edit\")));}","map":{"version":3,"names":["React","useState","Todo","_ref","todo","toggleTodo","editTodo","isEditing","setIsEditing","newName","setNewName","name","handleTodoClick","id","handleEditClick","handleSaveClick","handleCancelClick","createElement","Fragment","type","value","onChange","e","target","onClick","checked","complete"],"sources":["/Users/ksk/Desktop/Berkeley/Spring 2024/Projects/react-todo-list/src/Todo.js"],"sourcesContent":["import React, { useState } from 'react';\n\nexport default function Todo({ todo, toggleTodo, editTodo }) {\n  const [isEditing, setIsEditing] = useState(false);\n  const [newName, setNewName] = useState(todo.name);\n\n  function handleTodoClick() {\n    toggleTodo(todo.id);\n  }\n\n  function handleEditClick() {\n    setIsEditing(true);\n  }\n\n  function handleSaveClick() {\n    editTodo(todo.id, newName);\n    setIsEditing(false);\n  }\n\n  function handleCancelClick() {\n    setIsEditing(false);\n    setNewName(todo.name);\n  }\n\n  return (\n    <div>\n      {isEditing ? (\n        <>\n          <input\n            type=\"text\"\n            value={newName}\n            onChange={(e) => setNewName(e.target.value)}\n          />\n          <button onClick={handleSaveClick}>Save</button>\n          <button onClick={handleCancelClick}>Cancel</button>\n        </>\n      ) : (\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={todo.complete}\n            onChange={handleTodoClick}\n          />\n          {todo.name}\n          <button onClick={handleEditClick}>Edit</button>\n        </label>\n      )}\n    </div>\n  );\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAEvC,cAAe,SAAS,CAAAC,IAAIA,CAAAC,IAAA,CAAiC,IAAhC,CAAEC,IAAI,CAAEC,UAAU,CAAEC,QAAS,CAAC,CAAAH,IAAA,CACzD,KAAM,CAACI,SAAS,CAAEC,YAAY,CAAC,CAAGP,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACQ,OAAO,CAAEC,UAAU,CAAC,CAAGT,QAAQ,CAACG,IAAI,CAACO,IAAI,CAAC,CAEjD,QAAS,CAAAC,eAAeA,CAAA,CAAG,CACzBP,UAAU,CAACD,IAAI,CAACS,EAAE,CAAC,CACrB,CAEA,QAAS,CAAAC,eAAeA,CAAA,CAAG,CACzBN,YAAY,CAAC,IAAI,CAAC,CACpB,CAEA,QAAS,CAAAO,eAAeA,CAAA,CAAG,CACzBT,QAAQ,CAACF,IAAI,CAACS,EAAE,CAAEJ,OAAO,CAAC,CAC1BD,YAAY,CAAC,KAAK,CAAC,CACrB,CAEA,QAAS,CAAAQ,iBAAiBA,CAAA,CAAG,CAC3BR,YAAY,CAAC,KAAK,CAAC,CACnBE,UAAU,CAACN,IAAI,CAACO,IAAI,CAAC,CACvB,CAEA,mBACEX,KAAA,CAAAiB,aAAA,YACGV,SAAS,cACRP,KAAA,CAAAiB,aAAA,CAAAjB,KAAA,CAAAkB,QAAA,mBACElB,KAAA,CAAAiB,aAAA,UACEE,IAAI,CAAC,MAAM,CACXC,KAAK,CAAEX,OAAQ,CACfY,QAAQ,CAAGC,CAAC,EAAKZ,UAAU,CAACY,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC7C,CAAC,cACFpB,KAAA,CAAAiB,aAAA,WAAQO,OAAO,CAAET,eAAgB,EAAC,MAAY,CAAC,cAC/Cf,KAAA,CAAAiB,aAAA,WAAQO,OAAO,CAAER,iBAAkB,EAAC,QAAc,CAClD,CAAC,cAEHhB,KAAA,CAAAiB,aAAA,2BACEjB,KAAA,CAAAiB,aAAA,UACEE,IAAI,CAAC,UAAU,CACfM,OAAO,CAAErB,IAAI,CAACsB,QAAS,CACvBL,QAAQ,CAAET,eAAgB,CAC3B,CAAC,CACDR,IAAI,CAACO,IAAI,cACVX,KAAA,CAAAiB,aAAA,WAAQO,OAAO,CAAEV,eAAgB,EAAC,MAAY,CACzC,CAEN,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module"}