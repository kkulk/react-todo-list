{"version":3,"sources":["Todo.js","TodoList.js","App.js","index.js"],"names":["Todo","_ref","todo","toggleTodo","React","createElement","type","checked","complete","onChange","console","log","id","name","TodoListFunc","todos","Fragment","map","key","App","setTodos","useState","todoNameRef","useRef","useEffect","storedTodos","localStorage","getItem","JSON","parse","setItem","stringify","TodoList","newTodos","find","ref","onClick","current","value","prevTodos","uuidv4","filter","length","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"0JACe,SAASA,EAAIC,GAAwB,IAAvB,KAAEC,EAAI,WAAEC,GAAYF,EAO/C,OACEG,IAAAC,cAAA,WACED,IAAAC,cAAA,aACED,IAAAC,cAAA,SAAOC,KAAK,WAAWC,QAASL,EAAKM,SAAUC,SATrD,WACEC,QAAQC,IAAI,4BAAmD,oBAAfR,GAChDO,QAAQC,IAAI,WAAYT,EAAKU,IAC7BT,EAAWD,EAAKU,OAOXV,EAAKW,OCTC,SAASC,EAAYb,GAAyB,IAAxB,MAAEc,EAAK,WAAEZ,GAAYF,EACxD,OACEG,IAAAC,cAAAD,IAAAY,SAAA,KACGD,EAAME,IAAIf,GACFE,IAAAC,cAACL,EAAI,CAACkB,IAAKhB,EAAKU,GAAIV,KAAMA,EAAMC,WAAYA,M,YC4C5CgB,MA7Cf,WACE,MAAOJ,EAAOK,GAAYC,mBAAS,IAC7BC,EAAcC,mBAgCpB,OA9BAC,oBAAU,KACR,MAAMC,EAAcC,aAAaC,QAPX,iBAQlBF,GAAaL,EAASQ,KAAKC,MAAMJ,KACpC,IAEHD,oBAAU,KACRE,aAAaI,QAZS,gBAYkBF,KAAKG,UAAUhB,KACtD,CAACA,IAwBFX,IAAAC,cAAAD,IAAAY,SAAA,KACEZ,IAAAC,cAAC2B,EAAQ,CAACjB,MAAOA,EAAOZ,WAvB5B,SAAoBS,GAClB,MAAMqB,EAAW,IAAIlB,GACfb,EAAO+B,EAASC,KAAMhC,GAASA,EAAKU,KAAOA,GACjDV,EAAKM,UAAYN,EAAKM,SACtBY,EAASa,MAoBP7B,IAAAC,cAAA,SAAO8B,IAAKb,EAAahB,KAAK,SAC9BF,IAAAC,cAAA,UAAQ+B,QAlBZ,WACE,MAAMvB,EAAOS,EAAYe,QAAQC,MACpB,KAATzB,IACJO,EAAUmB,GACD,IAAIA,EAAW,CAAE3B,GAAI4B,cAAU3B,KAAMA,EAAML,UAAU,KAE9Dc,EAAYe,QAAQC,MAAQ,QAYM,YAChClC,IAAAC,cAAA,UAAQ+B,QAVZ,WACE,MAAMH,EAAWlB,EAAM0B,OAAQvC,IAAUA,EAAKM,UAC9CY,EAASa,KAQ4B,yBACnC7B,IAAAC,cAAA,WAAMU,EAAM0B,OAAQvC,IAAUA,EAAKM,UAAUkC,OAAO,iBC1C7CC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH3C,IAAAC,cAACD,IAAM4C,WAAU,KACf5C,IAAAC,cAACc,EAAG,S","file":"static/js/main.d8296a7d.chunk.js","sourcesContent":["import React from 'react';\nexport default function Todo({ todo, toggleTodo }) {\n  function handleTodoClick() {\n    console.log('toggleTodo is a function:', typeof toggleTodo === 'function'); // Should log true\n    console.log('todo.id:', todo.id); // Should log the todo id\n    toggleTodo(todo.id); // Ensure this line is correct\n  }\n\n  return (\n    <div>\n      <label>\n        <input type=\"checkbox\" checked={todo.complete} onChange={handleTodoClick} />\n        {todo.name}\n      </label>\n    </div>\n  );\n}\n","import React from 'react';\nimport Todo from './Todo';\n\nexport default function TodoListFunc({ todos, toggleTodo }) {\n  return (\n    <>\n      {todos.map(todo => {\n        return <Todo key={todo.id} todo={todo} toggleTodo={toggleTodo} />;\n      })}\n    </>\n  );\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport TodoList from './TodoList';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst LOCAL_STORAGE_KEY = 'todoApp.todos';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const todoNameRef = useRef();\n\n  useEffect(() => {\n    const storedTodos = localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (storedTodos) setTodos(JSON.parse(storedTodos));\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  function toggleTodo(id) {\n    const newTodos = [...todos];\n    const todo = newTodos.find((todo) => todo.id === id);\n    todo.complete = !todo.complete;\n    setTodos(newTodos);\n  }\n\n  function handleAddTodo() {\n    const name = todoNameRef.current.value;\n    if (name === '') return;\n    setTodos((prevTodos) => {\n      return [...prevTodos, { id: uuidv4(), name: name, complete: false }];\n    });\n    todoNameRef.current.value = null;\n  }\n\n  function handleClearTodos() {\n    const newTodos = todos.filter((todo) => !todo.complete);\n    setTodos(newTodos);\n  }\n\n  return (\n    <>\n      <TodoList todos={todos} toggleTodo={toggleTodo} />\n      <input ref={todoNameRef} type=\"text\" />\n      <button onClick={handleAddTodo}>Add Todo</button>\n      <button onClick={handleClearTodos}>Clear Completed Todos</button>\n      <div>{todos.filter((todo) => !todo.complete).length} left to do</div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}