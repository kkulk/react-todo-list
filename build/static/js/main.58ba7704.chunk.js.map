{"version":3,"sources":["Todo.js","TodoList.js","App.js","index.js"],"names":["Todo","_ref","todo","toggleTodo","React","createElement","type","checked","complete","onChange","id","name","TodoListFunc","todos","map","key","App","setTodos","useState","todoNameRef","useRef","useEffect","storedTodos","localStorage","getItem","JSON","parse","setItem","stringify","Fragment","TodoList","newTodos","find","ref","onClick","current","value","prevTodos","uuidv4","filter","length","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"0JAEe,SAASA,EAAIC,GAAsB,IAArB,KAACC,EAAI,WAAEC,GAAWF,EAI7C,OACEG,IAAAC,cAAA,WACID,IAAAC,cAAA,aACID,IAAAC,cAAA,SAAOC,KAAM,WAAWC,QAAWL,EAAKM,SAAUC,SAN5D,WACEN,EAAWD,EAAKQ,OAMPR,EAAKS,OCPH,SAASC,EAAYX,GAAW,IAAV,MAACY,GAAMZ,EAC1C,OACEY,EAAMC,IAAIZ,GACCE,IAAAC,cAACL,EAAI,CAACe,IAAOb,EAAKQ,GAAKR,KAAMA,K,YC8C7Bc,MA9Cf,WACE,MAAOH,EAAOI,GAAYC,mBAAS,IAC7BC,EAAcC,mBAgCpB,OA9BAC,oBAAW,KACT,MAAMC,EAAcC,aAAaC,QANX,iBAOlBF,GAAaL,EAASQ,KAAKC,MAAMJ,KACpC,IAEHD,oBAAW,KACTE,aAAaI,QAXS,gBAWkBF,KAAKG,UAAUf,KACtD,CAACA,IAwBFT,IAAAC,cAAAD,IAAAyB,SAAA,KACAzB,IAAAC,cAACyB,EAAQ,CAACjB,MAASA,EAAOV,WAvB5B,SAAoBO,GAClB,MAAMqB,EAAW,IAAKlB,GAChBX,EAAO6B,EAASC,KAAK9B,GAAQA,EAAKQ,KAAOA,GAC/CR,EAAKM,UAAYN,EAAKM,SACtBS,EAASc,MAoBT3B,IAAAC,cAAA,SAAO4B,IAAKd,EAAab,KAAK,SAC9BF,IAAAC,cAAA,UAAQ6B,QAjBV,WACE,MAAMvB,EAAOQ,EAAYgB,QAAQC,MACpB,KAATzB,IACJM,EAASoB,GACA,IAAIA,EAAW,CAAC3B,GAAI4B,cAAU3B,KAAMA,EAAMH,UAAS,KAE5DW,EAAYgB,QAAQC,MAAQ,QAWI,YAChChC,IAAAC,cAAA,UAAQ6B,QATV,WACE,MAAMH,EAAWlB,EAAM0B,OAAOrC,IAASA,EAAKM,UAC5CS,EAASc,KAO2B,yBACpC3B,IAAAC,cAAA,WAAK,IAAEQ,EAAM0B,OAAOrC,IAASA,EAAKM,UAAUgC,OAAO,iBC1C1CC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHzC,IAAAC,cAACD,IAAM0C,WAAU,KACf1C,IAAAC,cAACW,EAAG,S","file":"static/js/main.58ba7704.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Todo({todo, toggleTodo}) {\n  function handleTodoClick() {\n    toggleTodo(todo.id)\n  }\n  return (\n    <div>\n        <label>\n            <input type =\"checkbox\" checked = {todo.complete} onChange = {handleTodoClick} />\n            {todo.name}\n        </label>\n        \n\n    </div>\n  ) \n}\n","import React from 'react'\nimport Todo from './Todo'\n\nexport default function TodoListFunc({todos}) {\n  return (\n    todos.map(todo => {\n        return <Todo key = {todo.id}  todo={todo} />\n    })\n  )\n}\n","import React, {useState, useRef, useEffect} from 'react';\nimport TodoList from './TodoList'\nimport { v4 as uuidv4 } from 'uuid';\n\n\nconst LOCAL_STORAGE_KEY = 'todoApp.todos'\nfunction App() {\n  const [todos, setTodos] = useState([])\n  const todoNameRef = useRef()\n\n  useEffect( () => {\n    const storedTodos = localStorage.getItem(LOCAL_STORAGE_KEY)\n    if (storedTodos) setTodos(JSON.parse(storedTodos))\n  }, [])\n\n  useEffect( () => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\n  }, [todos])\n\n  function toggleTodo(id) {\n    const newTodos = [... todos]\n    const todo = newTodos.find(todo => todo.id === id)\n    todo.complete = !todo.complete\n    setTodos(newTodos)\n  }\n\n\n  function handleAddTodo() {\n    const name = todoNameRef.current.value\n    if (name === '') return\n    setTodos(prevTodos => {\n      return [...prevTodos, {id: uuidv4(), name: name, complete:false}]\n    })\n    todoNameRef.current.value = null  \n  }\n\n  function handleClearTodos() {\n    const newTodos = todos.filter(todo => !todo.complete)\n    setTodos(newTodos)\n  }\n  return (\n    <>\n    <TodoList todos = {todos} toggleTodo = {toggleTodo}/>\n    <input ref={todoNameRef} type=\"text\"/>\n    <button onClick={handleAddTodo}>Add Todo</button>\n    <button onClick={handleClearTodos} >Clear Completed Todos</button>\n    <div> {todos.filter(todo => !todo.complete).length} left to do</div>\n    </>\n    \n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}