{"version":3,"sources":["Todo.js","TodoList.js","App.js","index.js"],"names":["Todo","_ref","todo","toggleTodo","editTodo","isEditing","setIsEditing","useState","newName","setNewName","name","React","createElement","Fragment","type","value","onChange","e","target","onClick","id","checked","complete","TodoListFunc","todos","map","key","App","setTodos","todoNameRef","useRef","useEffect","storedTodos","localStorage","getItem","JSON","parse","setItem","stringify","TodoList","newTodos","find","ref","current","prevTodos","uuidv4","filter","length","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"0JAEe,SAASA,EAAIC,GAAkC,IAAjC,KAAEC,EAAI,WAAEC,EAAU,SAAEC,GAAUH,EACzD,MAAOI,EAAWC,GAAgBC,oBAAS,IACpCC,EAASC,GAAcF,mBAASL,EAAKQ,MAoB5C,OACEC,IAAAC,cAAA,WACGP,EACCM,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAAA,SACEE,KAAK,OACLC,MAAOP,EACPQ,SAAWC,GAAMR,EAAWQ,EAAEC,OAAOH,SAEvCJ,IAAAC,cAAA,UAAQO,QAnBhB,WACEf,EAASF,EAAKkB,GAAIZ,GAClBF,GAAa,KAiB2B,QAClCK,IAAAC,cAAA,UAAQO,QAfhB,WACEb,GAAa,GACbG,EAAWP,EAAKQ,QAa0B,WAGtCC,IAAAC,cAAA,aACED,IAAAC,cAAA,SACEE,KAAK,WACLO,QAASnB,EAAKoB,SACdN,SAnCV,WACEb,EAAWD,EAAKkB,OAoCTlB,EAAKQ,KACNC,IAAAC,cAAA,UAAQO,QAlChB,WACEb,GAAa,KAiC2B,UCzC7B,SAASiB,EAAYtB,GAAmC,IAAlC,MAAEuB,EAAK,WAAErB,EAAU,SAAEC,GAAUH,EAClE,OACEU,IAAAC,cAAAD,IAAAE,SAAA,KACGW,EAAMC,IAAKvB,GACVS,IAAAC,cAACZ,EAAI,CAAC0B,IAAKxB,EAAKkB,GAAIlB,KAAMA,EAAMC,WAAYA,EAAYC,SAAUA,M,YC4C3DuB,MA7Cf,WACE,MAAOH,EAAOI,GAAYrB,mBAAS,IAC7BsB,EAAcC,mBAgCpB,OA9BAC,oBAAU,KACR,MAAMC,EAAcC,aAAaC,QAPX,iBAQlBF,GAAaJ,EAASO,KAAKC,MAAMJ,KACpC,IAEHD,oBAAU,KACRE,aAAaI,QAZS,gBAYkBF,KAAKG,UAAUd,KACtD,CAACA,IAwBFb,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAAC2B,EAAQ,CAACf,MAAOA,EAAOrB,WAvB5B,SAAoBiB,GAClB,MAAMoB,EAAW,IAAIhB,GACftB,EAAOsC,EAASC,KAAMvC,GAASA,EAAKkB,KAAOA,GACjDlB,EAAKoB,UAAYpB,EAAKoB,SACtBM,EAASY,MAoBP7B,IAAAC,cAAA,SAAO8B,IAAKb,EAAaf,KAAK,SAC9BH,IAAAC,cAAA,UAAQO,QAlBZ,WACE,MAAMT,EAAOmB,EAAYc,QAAQ5B,MACpB,KAATL,IACJkB,EAAUgB,GACD,IAAIA,EAAW,CAAExB,GAAIyB,cAAUnC,KAAMA,EAAMY,UAAU,KAE9DO,EAAYc,QAAQ5B,MAAQ,QAYM,YAChCJ,IAAAC,cAAA,UAAQO,QAVZ,WACE,MAAMqB,EAAWhB,EAAMsB,OAAQ5C,IAAUA,EAAKoB,UAC9CM,EAASY,KAQ4B,yBACnC7B,IAAAC,cAAA,WAAMY,EAAMsB,OAAQ5C,IAAUA,EAAKoB,UAAUyB,OAAO,iBC1C7CC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHzC,IAAAC,cAACD,IAAM0C,WAAU,KACf1C,IAAAC,cAACe,EAAG,S","file":"static/js/main.970f2640.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nexport default function Todo({ todo, toggleTodo, editTodo }) {\n  const [isEditing, setIsEditing] = useState(false);\n  const [newName, setNewName] = useState(todo.name);\n\n  function handleTodoClick() {\n    toggleTodo(todo.id);\n  }\n\n  function handleEditClick() {\n    setIsEditing(true);\n  }\n\n  function handleSaveClick() {\n    editTodo(todo.id, newName);\n    setIsEditing(false);\n  }\n\n  function handleCancelClick() {\n    setIsEditing(false);\n    setNewName(todo.name);\n  }\n\n  return (\n    <div>\n      {isEditing ? (\n        <>\n          <input\n            type=\"text\"\n            value={newName}\n            onChange={(e) => setNewName(e.target.value)}\n          />\n          <button onClick={handleSaveClick}>Save</button>\n          <button onClick={handleCancelClick}>Cancel</button>\n        </>\n      ) : (\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={todo.complete}\n            onChange={handleTodoClick}\n          />\n          {todo.name}\n          <button onClick={handleEditClick}>Edit</button>\n        </label>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport Todo from './Todo';\n\nexport default function TodoListFunc({ todos, toggleTodo, editTodo }) {\n  return (\n    <>\n      {todos.map((todo) => (\n        <Todo key={todo.id} todo={todo} toggleTodo={toggleTodo} editTodo={editTodo} />\n      ))}\n    </>\n  );\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport TodoList from './TodoList';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst LOCAL_STORAGE_KEY = 'todoApp.todos';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const todoNameRef = useRef();\n\n  useEffect(() => {\n    const storedTodos = localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (storedTodos) setTodos(JSON.parse(storedTodos));\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  function toggleTodo(id) {\n    const newTodos = [...todos];\n    const todo = newTodos.find((todo) => todo.id === id);\n    todo.complete = !todo.complete;\n    setTodos(newTodos);\n  }\n\n  function handleAddTodo() {\n    const name = todoNameRef.current.value;\n    if (name === '') return;\n    setTodos((prevTodos) => {\n      return [...prevTodos, { id: uuidv4(), name: name, complete: false }];\n    });\n    todoNameRef.current.value = null;\n  }\n\n  function handleClearTodos() {\n    const newTodos = todos.filter((todo) => !todo.complete);\n    setTodos(newTodos);\n  }\n\n  return (\n    <>\n      <TodoList todos={todos} toggleTodo={toggleTodo} />\n      <input ref={todoNameRef} type=\"text\" />\n      <button onClick={handleAddTodo}>Add Todo</button>\n      <button onClick={handleClearTodos}>Clear Completed Todos</button>\n      <div>{todos.filter((todo) => !todo.complete).length} left to do</div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}